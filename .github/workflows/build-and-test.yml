name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: macos-latest
    
    strategy:
      matrix:
        xcode: ['15.0']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: Show Swift version
      run: swift --version

    - name: Install Xcodegen
      run: brew install xcodegen

    - name: Generate Xcode project
      run: xcodegen

    - name: Install Swiftlint
      run: brew install swiftlint

    - name: Run Swiftlint
      run: swiftlint lint
    
    - name: Cache SPM dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Caches/org.swift.swiftpm/
          ~/.swiftpm/
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Resolve dependencies
      run: xcodebuild -resolvePackageDependencies
    
    - name: Build project
      run: |
        xcodebuild build \
          -scheme ora \
          -destination "platform=macOS" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
    
    - name: Run tests
      run: |
        xcodebuild test \
          -scheme ora \
          -destination "platform=macOS" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults.xcresult
    
    - name: Generate code coverage report
      run: |
        xcrun xccov view --report --json TestResults.xcresult > coverage.json
        xcrun xccov view --report TestResults.xcresult
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.json
        fail_ci_if_error: false

  # build-release:
  #   runs-on: macos-latest
  #   needs: build-and-test
  #   if: github.ref == 'refs/heads/main'
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
    
  #   - name: Select Xcode version
  #     run: sudo xcode-select -s /Applications/Xcode_15.0.app
    
  #   - name: Build for release
  #     run: |
  #       xcodebuild archive \
  #         -scheme ora \
  #         -destination "platform=macOS" \
  #         -configuration Release \
  #         -archivePath build/Ora.xcarchive \
  #         CODE_SIGN_IDENTITY="" \
  #         CODE_SIGNING_REQUIRED=NO
    
  #   - name: Export app
  #     run: |
  #       xcodebuild -exportArchive \
  #         -archivePath build/Ora.xcarchive \
  #         -exportPath build/export \
  #         -exportOptionsPlist ExportOptions.plist
    
  #   - name: Create DMG (optional)
  #     run: |
  #       # Install create-dmg if you want to create a DMG
  #       # brew install create-dmg
  #       # create-dmg --volname "Ora" --window-pos 200 120 \
  #       #   --window-size 600 300 --icon-size 100 --app-drop-link 425 120 \
  #       #   "Ora.dmg" "build/export/Ora.app"
    
  #   - name: Upload build artifacts
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: macos-app
  #       path: build/export/